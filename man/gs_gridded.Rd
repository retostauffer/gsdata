% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/griddata.R
\name{gs_gridded}
\alias{gs_gridded}
\title{Downloading Gridded Data}
\usage{
gs_gridded(
  mode,
  resource_id,
  parameters = NULL,
  start = NULL,
  end = NULL,
  what = NULL,
  expert = FALSE,
  overwrite = FALSE,
  verbose = FALSE,
  format = NULL,
  limit = 2e+05,
  config = list()
)
}
\arguments{
\item{mode}{character, specify mode of data.}

\item{resource_id}{character, specify resource identifier of data.}

\item{parameters}{character vector to define which parameters to process.}

\item{start, end}{object of class \code{Date}, \code{POSIXt}, or \code{character}.
In case of character in a non-ISO format \code{format} can be used (see below).
Not needed (ignored) when \code{mode = "current"}.}

\item{what}{either path to a netcdf file or an object which has a \code{st_bbox()}
method; defines the spatial extent to be downloaded and the object returned
(see section 'What to download/return').}

\item{expert}{logical, defaults to \code{FALSE}. If \code{TRUE} the script will not
check if the input arguments are valid. May result in unsuccessful requests
but increases the speed as \code{gs_datasets()} and \code{gs_metadata()}
do not have to be called (two API requests less).}

\item{overwrite}{logical, if \code{FALSE} and \code{what} is a file an error will
be thrown if the file exists. Can be set to \code{TRUE}, in this case
the output file will be overwritten if existing.}

\item{verbose}{logical, if set \code{TRUE} some more output will be produced.}

\item{format}{\code{NULL} (default) or character string, used if \code{start}/\code{end}
are characters in a specific (non ISO) format.}

\item{limit}{integer, API data request limit. If the request sent by the user
exceeds this limit, the request will be split into batches automatically.
Set to 2e5 as the limit stated on the API documentation (1e6) will not be accepted.}

\item{config}{empty list by default; can be a named list to be fowrarded
to the \code{httr::GET} request if needed.}
}
\value{
TODO
}
\description{
Accessing the API endpoint \code{v1/grid},
see \url{https://dataset.api.hub.geosphere.at/v1/docs/getting-started.html}.
}
\details{
This function is a convenience function for downloading different
sets of gridded data from the GeoSphere Austria data hub (formerly ZAMG).
The API may change and additional resources may be added, for details see
\url{https://dataset.api.hub.geosphere.at/v1/docs/user-guide/endpoints.html}.

To see what's available call \code{gs_datasets("grid")}.

The API has a limit for the number of elements for one request. The calculation
is based on the number of expecte elements (i.e., number of stations times number
of parameters times number of time steps). This function will pre-calculate the number
of expected elements and split the request into batches along the time dimension - if needed.
}
\section{What to download/return}{


TODO: Explain.
The plan:
\itemize{
\item if st_bbox -> download grid; return stars
\item if st data.frame -> points? -> extract
\item if character -> file or path. check if directory exists
and save netcdf there.

}
}

\examples{
######################################################################
## TODO: Write some examples (most dontrun)

}
\author{
Reto Stauffer
}
